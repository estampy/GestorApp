// <auto-generated />
using System;
using GestorApp.Models;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace GestorApp.Migrations
{
    [DbContext(typeof(GestorContext))]
    [Migration("20211118231358_NotMappedInTelefono")]
    partial class NotMappedInTelefono
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 64)
                .HasAnnotation("ProductVersion", "5.0.12");

            modelBuilder.Entity("GestorApp.Models.Apps", b =>
                {
                    b.Property<int>("AppsId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("Nombre")
                        .HasColumnType("text");

                    b.HasKey("AppsId");

                    b.ToTable("Apps");
                });

            modelBuilder.Entity("GestorApp.Models.Instalaciones", b =>
                {
                    b.Property<int>("InstalacionesId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<int>("AppsId")
                        .HasColumnType("int");

                    b.Property<bool>("Exitosa")
                        .HasColumnType("tinyint(1)");

                    b.Property<DateTime>("Fecha")
                        .HasColumnType("datetime");

                    b.Property<int>("OperariosId")
                        .HasColumnType("int");

                    b.Property<int>("TelefonosID")
                        .HasColumnType("int");

                    b.HasKey("InstalacionesId");

                    b.HasIndex("AppsId");

                    b.HasIndex("OperariosId");

                    b.HasIndex("TelefonosID");

                    b.ToTable("Instalaciones");
                });

            modelBuilder.Entity("GestorApp.Models.Operarios", b =>
                {
                    b.Property<int>("OperariosId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("Apellido")
                        .HasColumnType("text");

                    b.Property<string>("Nombre")
                        .HasColumnType("text");

                    b.HasKey("OperariosId");

                    b.ToTable("Operarios");
                });

            modelBuilder.Entity("GestorApp.Models.Sensores", b =>
                {
                    b.Property<int>("SensoresId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("Nombre")
                        .HasColumnType("text");

                    b.HasKey("SensoresId");

                    b.ToTable("Sensores");
                });

            modelBuilder.Entity("GestorApp.Models.Telefonos", b =>
                {
                    b.Property<int>("TelefonosId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("Marca")
                        .HasColumnType("text");

                    b.Property<string>("Modelo")
                        .HasColumnType("text");

                    b.Property<float>("Precio")
                        .HasColumnType("float");

                    b.HasKey("TelefonosId");

                    b.ToTable("Telefonos");
                });

            modelBuilder.Entity("GestorApp.Models.Instalaciones", b =>
                {
                    b.HasOne("GestorApp.Models.Apps", "Apps")
                        .WithMany("Instalaciones")
                        .HasForeignKey("AppsId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("GestorApp.Models.Operarios", "Operarios")
                        .WithMany("Instalaciones")
                        .HasForeignKey("OperariosId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("GestorApp.Models.Telefonos", "Telefonos")
                        .WithMany("Instalaciones")
                        .HasForeignKey("TelefonosID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Apps");

                    b.Navigation("Operarios");

                    b.Navigation("Telefonos");
                });

            modelBuilder.Entity("GestorApp.Models.Apps", b =>
                {
                    b.Navigation("Instalaciones");
                });

            modelBuilder.Entity("GestorApp.Models.Operarios", b =>
                {
                    b.Navigation("Instalaciones");
                });

            modelBuilder.Entity("GestorApp.Models.Telefonos", b =>
                {
                    b.Navigation("Instalaciones");
                });
#pragma warning restore 612, 618
        }
    }
}
